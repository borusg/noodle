# From: https://github.com/actions/starter-workflows/blob/main/ci/ruby.yml

name: Ruby

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.7']

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v2

      - name: Set up Ruby
        # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
        # change this to (see https://github.com/ruby/setup-ruby#versioning):
        # uses: ruby/setup-ruby@v1
        uses: ruby/setup-ruby@v1 # 473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      # Today (3/2022) the ES action doesn't seem to set up authentication or TLS
      - name: Runs Elasticsearch and grabs CA cert
        env:
          ELASTICSEARCH_PASSWORD: ${{ secrets.ELASTICSEARCH_PASSWORD }}
          NOODLE_PASSWORD: ${{ secrets.NOODLE_PASSWORD }}
        run: |
          docker network create elastic
          docker run --rm --name es01 --net elastic -p 9200:9200 -p 9300:9300 --env "ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}" --detach elastic/elasticsearch:8.1.0
          sleep 60 # Yup, sleep is silly, better later
          docker cp es01:/usr/share/elasticsearch/config/certs/http_ca.crt config/elastic-stack-cacert.pem
          bin/elasticsearch-create-noodle-role.sh
          bin/elasticsearch-create-noodle-user.sh
          # Give noodle_user password to Noodle
          echo "${NOODLE_PASSWORD}" > config/.pw

      - name: Run tests
        run: bundle exec rake test_authttps
