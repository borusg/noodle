#!/usr/bin/env ruby

# 'noodle' script for systems with Curl < 7.18.0 when
# --data-urlencode was added.  Or maybe you just prefer
# Ruby to Curl?
#
# Unlike everything else, this is supposed to work with Ruby
# 1.8.5 and higher so it works on RHEL5

require 'uri'
require 'net/http'
require 'optimist'

ENV['NOODLE_SERVER'] = 'localhost:9292' if ENV['NOODLE_SERVER'].nil?

if $0.match?(/noodlin/)
  endpoint =  'noodlin/?now&'
  maybe_refresh = ''
else
  endpoint = '_/'

  opts = Optimist::options do
    opt :refresh, 'Refresh Noodle options and bareword terms (AKA voodoo)'
    opt :debug, 'Display debug info'
  end
  maybe_refresh = opts[:refresh] ? '?refresh' : ''
end

# Oh boy encoding is fun. Shirley, some other call would encode better
# without the need for the gsubs. But just as Shirley, noodlin should
# really be a POST so TODO that one day and encoding won't matter.
noodle_query = URI.encode(ARGV.join(' ')).gsub('=','%3D').gsub('+','%2B')

uri = URI("http://#{ENV['NOODLE_SERVER']}/nodes/#{endpoint}#{noodle_query}#{maybe_refresh}")

#puts "URI is #{uri}" if opts[:debug]
puts Net::HTTP.get(uri)
